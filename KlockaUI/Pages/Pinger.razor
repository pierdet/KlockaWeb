@page "/pinger"
@using KlockaLib
@using KlockaLib.Models

<div class="jumbotron vertical-center">
    <div class="container">
        <h3>@hostTitle</h3>
        <div class="input-group mb-3">
            <input type="text" placeholder="Hostname" @bind-value="hostname" @bind-value:event="oninput" class="form-control" />
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" @onclick="TestConnection" type="button">Ping</button>
            </div>
        </div>
        @if (showResult)
        {
            <ul class="list-group-flush">
                <li class="list-group-item">@connectionResult
                    <button type="button" class="close" aria-label="Close" @onclick="HideResult">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </li>
            </ul>
        }
    </div>
</div>


@code 
{
    string hostTitle = "Pinger";
    private string connectionResult;
    private string hostname;
    private bool showResult = false;

    private void TestConnection()
    {
        if (!string.IsNullOrWhiteSpace(hostname))
        {
            using(var connectionTester = new ConnectionValidator())
            {
                var result = connectionTester.Validate(hostname);
                if (result.Success)
                {
                    connectionResult = $"{hostname} is reachable";
                }
                else
                {
                    connectionResult = $"{hostname} is not reachable - {result.ErrorMessage}";
                }
            }
            showResult = true;
        }

    }
    private void HideResult()
    {
        showResult = false;
    }
}
